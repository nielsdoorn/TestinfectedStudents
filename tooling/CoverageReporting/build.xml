<?xml version="1.0"?>
<project name="CodeCoverage" default="apl">
    <property name="my.basedir" value="../uitwerkingenTentamen" />
    <scriptdef name="substring" language="javascript">
        <attribute name="text" />
        <attribute name="start" />
        <attribute name="end" />
        <attribute name="property" />
        <![CDATA[
        var text = attributes.get("text");
        var start = attributes.get("start");
        if (parseInt(start) < 0) {
            start = text.length() + parseInt(start);
        }
        var end = attributes.get("end") || text.length();
        project.setProperty(attributes.get("property"), text.substring(start, end));
        ]]>
    </scriptdef>
    <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpath="/usr/local/Cellar/ant-contrib/1.0b3/share/ant/ant-contrib-1.0b3.jar"/>
    <property name="clover.jar" location="clover-ant-4.2.1/lib/clover.jar"/>
    <taskdef resource="cloverlib.xml" classpath="${clover.jar}"/>
    <!-- -->
    <path id="junitpath">
        <pathelement location="junit-4.12.jar"/>
        <pathelement location="hamcrest-core-1.3.jar"/>
        <pathelement path="${clover.jar}"/>
    </path>
    <!-- -->
    <target name="clover.pdf">
        <clover-pdf-report outfile="${project}/coverage/coverage-${projectid}.pdf" projectName="${projectid}" />
    </target>
    <target name="clover.log">
        <clover-log />
    </target>
    <target name="clover.xml">
        <clover-report projectName="${projectid}">
            <current outfile="${project}/coverage/coverage-${projectid}.xml" summary="false">
                <format type="xml"/>
            </current>
        </clover-report>
    </target>
    <target name="cloversummary.xml">
        <clover-report projectName="${projectid}">
            <current outfile="${project}/coverage/coveragesummary-${projectid}.xml" summary="true">
                <format type="xml"/>
            </current>
        </clover-report>
    </target>
    <target name="report.json">
        <clover-report projectName="${projectid}">
            <current outfile="${project}/coverage/coverage-${projectid}.json">
                <format type="json"/>
                <columns>
                    <lineCount/>
                    <ncLineCount/>
                </columns>
            </current>
        </clover-report>
    </target>
    <!-- -->
    <junit>
        <classpath refid="junitpath" />
        <formatter type="xml"/>
    </junit>
    <!-- -->
    <target name="clean">
        <delete dir="${project}/bin" />
        <delete dir="${project}/test" />
        <delete dir="${project}/coverage" />
    </target>
    <target name="makedir" depends="clean">
        <mkdir dir="${project}/bin" />
        <mkdir dir="${project}/test" />
        <mkdir dir="${project}/coverage" />
    </target>
    <!-- -->
    <target name="clover.clean">
        <clover-clean />
    </target>
    <target name="with.clover">
        <clover-setup />
    </target>
    <target name="compile" depends="with.clover">
        <javac includeantruntime="false" srcdir="${project}" destdir="${project}/bin" failonerror="no">
            <classpath refid="junitpath" />
        </javac>
    </target>
    <target name="test">
        <junit printsummary="on" fork="false" haltonfailure="no">
            <classpath>
                <pathelement location="${project}/bin"/>
                <pathelement location="junit-4.12.jar"/>
                <pathelement location="hamcrest-core-1.3.jar"/>
                <pathelement path="${clover.jar}"/>
            </classpath>
            <!-- formatter type="plain" / -->
            <formatter type="xml"/>
            <batchtest todir="${project}/test">
                <fileset dir="${project}">
                    <!-- include name="**/*Test*.java" /-->
                    <include name="**/*.java" />
                </fileset>
            </batchtest>
        </junit>
    </target>
    <target name="coverage" depends="clover.clean, makedir">
        <trycatch>
            <try>
                <substring text="${project}" start="-8" property="projectid" />
                <echo message=">>>>>>>> PROJECTID: ${projectid}" />
                <antcall target="compile" inheritRefs="true">
                    <param name="project" value="${project}"/>
                </antcall>
                <antcall target="test" inheritRefs="true">
                    <param name="project" value="${project}"/>
                </antcall>
                <antcall target="clover.xml" inheritRefs="true">
                    <param name="project" value="${project}"/>
                    <param name="projectid" value="${projectid}"/>
                </antcall>
                <antcall target="cloversummary.xml" inheritRefs="true">
                    <param name="project" value="${project}"/>
                    <param name="projectid" value="${projectid}"/>
                </antcall>
                <antcall target="clover.pdf" inheritRefs="true">
                    <param name="project" value="${project}"/>
                    <param name="projectid" value="${projectid}"/>
                </antcall>
                <antcall target="clover.log" inheritRefs="true">
                    <param name="project" value="${project}"/>
                    <param name="projectid" value="${projectid}"/>
                </antcall>
                <!-- copy project to seperate dir -->
                <length file="${project}/coverage/coverage.pdf" property="coveragelength" />
                <if>
                    <equals arg1="${coveragelength}" arg2="0" />
                    <then>
                        <echo message=">>>>>>>> NO COVERAGE" />
                    </then>
                    <else>
                        <mkdir dir="${my.basedir}/projectsWithCoverage/${projectid}/" />
                        <copy todir="${my.basedir}/projectsWithCoverage/${projectid}/">
                            <fileset dir="${project}" includes="**"/>
                        </copy>
                        <echo message=">>>>>>>> PROJECT WITH COVERAGE" />
                    </else>
                </if>
            </try>
            <catch>
                <echo message=">>>>>>>> COVERAGE failed...." />
            </catch>
        </trycatch>
    </target>
    <!-- -->
    <target name="apl" depends="clover.clean">
        <delete dir="${my.basedir}/projectsWithCoverage" />
        <mkdir dir="${my.basedir}/projectsWithCoverage" />
        <foreach target="coverage" param="project" inheritall="true">
            <path>
                <dirset dir="${my.basedir}/">
                    <include name="*"/>
                </dirset>
            </path>
        </foreach>
    </target>
    <target name="ultraclean">
        <delete dir="${my.basedir}/projectsWithCoverage" />
        <foreach target="clean" param="project" inheritall="true">
            <path>
                <dirset dir="${my.basedir}/">
                    <include name="*"/>
                </dirset>
            </path>
        </foreach>
    </target>
</project>